{"ast":null,"code":"import { baseHeader, baseUrlServer } from \"../shared/NetworkSettings\";\nvar baseUrl = baseUrlServer;\nexport function createStudent(firstName, lastName, email, password, major, university, faculty, studentGroup, studentSubGroup) {\n  var url = baseUrl + \"student/saveStudent\";\n  return fetch(url, {\n    method: 'POST',\n    headers: baseHeader,\n    body: JSON.stringify({\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      major: major,\n      university: university,\n      faculty: faculty,\n      studentGroup: studentGroup,\n      studentSubGroup: studentSubGroup\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (err) {\n    console.log(err);\n  });\n}\nexport function createTeacher(teacherDepartment, teacherAvailability, teacherFirstName, teacherLastName, email, password, teacherUniversity, teacherFaculty, teacherWebSite) {\n  var url = baseUrl + \"teacher/activateTeacher\";\n  return fetch(url, {\n    method: 'POST',\n    headers: baseHeader,\n    body: JSON.stringify({\n      teacherDepartment: teacherDepartment,\n      teacherAvailability: teacherAvailability,\n      teacherFirstName: teacherFirstName,\n      teacherLastName: teacherLastName,\n      email: email,\n      password: password,\n      teacherEnabled: true,\n      teacherUniversity: teacherUniversity,\n      teacherFaculty: teacherFaculty,\n      teacherWebSite: teacherWebSite\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n    return data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}","map":{"version":3,"sources":["C:/Users/Diana/Facultate/Year3/PC/ubb-protool-fe/src/rest/registerRest.js"],"names":["baseHeader","baseUrlServer","baseUrl","createStudent","firstName","lastName","email","password","major","university","faculty","studentGroup","studentSubGroup","url","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","err","console","log","createTeacher","teacherDepartment","teacherAvailability","teacherFirstName","teacherLastName","teacherUniversity","teacherFaculty","teacherWebSite","teacherEnabled"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,aAApB,QAAwC,2BAAxC;AAEA,IAAMC,OAAO,GAAGD,aAAhB;AAEA,OAAO,SAASE,aAAT,CAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmDC,QAAnD,EAA6DC,KAA7D,EAAoEC,UAApE,EACuBC,OADvB,EACgCC,YADhC,EAC8CC,eAD9C,EAC+D;AAClE,MAAMC,GAAG,GAAGX,OAAO,GAAG,qBAAtB;AACA,SAAOY,KAAK,CAACD,GAAD,EAAM;AACdE,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAEhB,UAFK;AAGdiB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBf,MAAAA,SAAS,EAAEA,SADM;AAEjBC,MAAAA,QAAQ,EAAEA,QAFO;AAGjBC,MAAAA,KAAK,EAAEA,KAHU;AAIjBC,MAAAA,QAAQ,EAAEA,QAJO;AAKjBC,MAAAA,KAAK,EAAEA,KALU;AAMjBC,MAAAA,UAAU,EAAEA,UANK;AAOjBC,MAAAA,OAAO,EAAEA,OAPQ;AAQjBC,MAAAA,YAAY,EAAEA,YARG;AASjBC,MAAAA,eAAe,EAAEA;AATA,KAAf;AAHQ,GAAN,CAAL,CAeJQ,IAfI,CAeC,UAACC,QAAD,EAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAjBM,EAkBFF,IAlBE,CAkBG,UAACG,IAAD,EAAU;AACZ,WAAOA,IAAP;AACH,GApBE,EAqBFC,KArBE,CAqBI,UAACC,GAAD,EAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAvBE,CAAP;AAwBH;AAED,OAAO,SAASG,aAAT,CAAuBC,iBAAvB,EAA0CC,mBAA1C,EAA+DC,gBAA/D,EAAiFC,eAAjF,EAAkG1B,KAAlG,EAAyGC,QAAzG,EAAmH0B,iBAAnH,EAAsIC,cAAtI,EAAsJC,cAAtJ,EAAsK;AACzK,MAAMtB,GAAG,GAAGX,OAAO,GAAG,yBAAtB;AACA,SAAOY,KAAK,CAACD,GAAD,EAAM;AACdE,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,OAAO,EAAEhB,UAFK;AAGdiB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBU,MAAAA,iBAAiB,EAAEA,iBADF;AAEjBC,MAAAA,mBAAmB,EAAEA,mBAFJ;AAGjBC,MAAAA,gBAAgB,EAAEA,gBAHD;AAIjBC,MAAAA,eAAe,EAAEA,eAJA;AAKjB1B,MAAAA,KAAK,EAAEA,KALU;AAMjBC,MAAAA,QAAQ,EAAEA,QANO;AAOjB6B,MAAAA,cAAc,EAAE,IAPC;AAQjBH,MAAAA,iBAAiB,EAAEA,iBARF;AASjBC,MAAAA,cAAc,EAAEA,cATC;AAUjBC,MAAAA,cAAc,EAAEA;AAVC,KAAf;AAHQ,GAAN,CAAL,CAeJf,IAfI,CAeC,UAACC,QAAD,EAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAjBM,EAkBFF,IAlBE,CAkBG,UAACG,IAAD,EAAU;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WAAOA,IAAP;AACH,GArBE,EAsBFC,KAtBE,CAsBI,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAtBJ,CAAP;AAuBH","sourcesContent":["import {baseHeader, baseUrlServer} from \"../shared/NetworkSettings\";\r\n\r\nconst baseUrl = baseUrlServer;\r\n\r\nexport function createStudent(firstName, lastName, email, password, major, university,\r\n                              faculty, studentGroup, studentSubGroup) {\r\n    const url = baseUrl + \"student/saveStudent\";\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: baseHeader,\r\n        body: JSON.stringify({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n            major: major,\r\n            university: university,\r\n            faculty: faculty,\r\n            studentGroup: studentGroup,\r\n            studentSubGroup: studentSubGroup\r\n        })\r\n\r\n    }).then((response) => {\r\n        return response.json()\r\n    })\r\n        .then((data) => {\r\n            return data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n}\r\n\r\nexport function createTeacher(teacherDepartment, teacherAvailability, teacherFirstName, teacherLastName, email, password, teacherUniversity, teacherFaculty, teacherWebSite) {\r\n    const url = baseUrl + \"teacher/activateTeacher\";\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: baseHeader,\r\n        body: JSON.stringify({\r\n            teacherDepartment: teacherDepartment,\r\n            teacherAvailability: teacherAvailability,\r\n            teacherFirstName: teacherFirstName,\r\n            teacherLastName: teacherLastName,\r\n            email: email,\r\n            password: password,\r\n            teacherEnabled: true,\r\n            teacherUniversity: teacherUniversity,\r\n            teacherFaculty: teacherFaculty,\r\n            teacherWebSite: teacherWebSite\r\n        })\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            console.log(data);\r\n            return data;\r\n        })\r\n        .catch((err) => console.log(err));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}