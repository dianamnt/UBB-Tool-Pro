{"ast":null,"code":"import React from \"react\";\nimport { MessageStudent } from \"../model/MessageStudent\";\nimport Change from \"../model/Change\";\nimport CourseClass from \"../model/CourseClass\";\nimport Course from \"../model/Course\";\nimport { Subgroup } from \"../model/Subgroup\";\nimport { Teacher } from \"../model/Teacher\";\nimport { Student } from \"../model/Student\";\nimport { MessageTeacher } from \"../model/MessageTeacher\";\nimport { baseUrlServer } from \"../shared/NetworkSettings\";\nimport { getDayNumber, getTeacherById2 } from \"./userRest\";\nvar baseUrl = baseUrlServer;\nvar url = \"\";\n\nfunction getCourseById2(lista, id) {\n  for (var i in lista) {\n    if (lista[i].courseId === id) {\n      var co = new Course(lista[i].courseId, lista[i].courseName, lista[i].courseUniversity, lista[i].courseFaculty, lista[i].courseStartDate, lista[i].courseEndDate);\n      return co;\n    }\n  }\n}\n\nfunction getClassById(lista, id, teacherL, courseL, sub) {\n  for (var i in lista) {\n    if (lista[i].classId === id) {\n      console.log(lista[i]);\n      var c = new CourseClass();\n      c.classId = lista[i].classId;\n      c.classType = lista[i].classType;\n      c.classWeek = lista[i].classWeek;\n      c.classDay = getDayNumber(lista[i].classDay);\n      c.classHour = Number(lista[i].classHour.substring(0, 2));\n      c.classLocation = lista[i].classLocation;\n      c.teacher = getTeacherById2(teacherL, lista[i].teacherId);\n      c.subgroup = sub;\n      c.course = getCourseById2(courseL, lista[i].courseId);\n      return c;\n    }\n  }\n}\n\nexport function getChangesForStudent(student) {\n  var urlForChanges = baseUrl + \"change/get-changes-by-student-id/\" + student.studentId;\n  return fetch(baseUrl + \"class/list\", {\n    method: \"GET\"\n  }).then(function (r) {\n    return r.json();\n  }).then(function (classes) {\n    return fetch(baseUrl + \"course/list\", {\n      method: 'GET'\n    }).then(function (r) {\n      return r.json();\n    }).then(function (courses) {\n      return fetch(baseUrl + \"teacher/list\", {\n        method: 'GET'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (teachers) {\n        return fetch(urlForChanges, {\n          method: 'GET'\n        }).then(function (r) {\n          return r.json();\n        }).then(function (changes) {\n          var result = [];\n\n          for (var i in changes) {\n            console.log(changes);\n            console.log(classes);\n            var change = new Change();\n            change.permanentChange = Date.parse(changes[i].endDate) - Date.parse(changes[i].startDate) > 518400000;\n            var courseClass = getClassById(classes, changes[i].universityClassId, teachers, courses, student.subgroup);\n            change.courseClass = courseClass; //console.log(courseClass.classDay)\n\n            change.toTheDate = \"Day: \" + courseClass.classDay + \" hour: \" + courseClass.classHour;\n            change.fromTheDate = \"\"; //ramane gol deocamdata, nu stim cum sa luam from date-ul.\n\n            change.student = student;\n            change.messageText = \"\";\n            change.status = changes[i].changeStatus;\n            change.changeId = changes[i].changeId;\n            result.push(change);\n          }\n\n          return result;\n        });\n      });\n    });\n  });\n}\nexport function getMessagesForTeacher(teacherId) {\n  url = baseUrl + \"teacher/get-messages\" + teacherId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var messages = data;\n    var messagesTeacher = [];\n    messages.forEach(myFunction);\n\n    function myFunction(item, index) {\n      var messageTeacher = new MessageTeacher(); //messageTeacher.change = getChangeById(item.changeId);\n\n      messageTeacher.messageId = item.messageId;\n      messageTeacher.status = messageTeacher.change.status;\n      messageTeacher.messageText = item.messageText;\n      messagesTeacher.push(messageTeacher);\n    }\n\n    return messagesTeacher;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}\nexport function getCourseClassById(courseClassId) {\n  url = baseUrl + \"class/get-by-id/\" + courseClassId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var courseClass = new CourseClass();\n    courseClass.classHour = data.classHour;\n    courseClass.classDay = data.classDay;\n    courseClass.course = getCourseById(data.courseId);\n    courseClass.classDuration = data.classDuration;\n    courseClass.classId = data.classId;\n    courseClass.classLocation = data.classLocation;\n    courseClass.classType = data.classType;\n    courseClass.classWeek = data.classWeek;\n    courseClass.subgroup = getSubgroupById(data.subgroupId);\n    courseClass.teacher = getTeacherById(data.teacherId);\n    return courseClass;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}\nexport function getCourseById(courseId) {\n  url = baseUrl + \"course/get-by-id/\" + courseId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var course = new Course();\n    course.courseId = data.courseId;\n    course.courseName = data.courseName;\n    course.endDate = data.courseEndDate;\n    course.fac = data.courseFaculty;\n    course.semester = data.courseSemester;\n    course.startDate = data.courseStartDate;\n    course.uni = course.courseUniversity;\n    return course;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}\nexport function getSubgroupById(subgroupId) {\n  url = baseUrl + \"subgroup/get-by-id/\" + subgroupId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var subgroup = new Subgroup();\n    subgroup.subgroupId = data.subgroupId;\n    subgroup.subgroupNumber = data.subgroupNumber;\n    subgroup.groupNumber = data.groupNumber;\n    return subgroup;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}\nexport function getTeacherById(teacherId) {\n  url = baseUrl + \"teacher/get-by-id/\" + teacherId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var teacher = new Teacher();\n    teacher.teacherId = data.teacherId;\n    teacher.firstname = data.teacherFirstName;\n    teacher.lastname = data.teacherLastName;\n    teacher.department = data.teacherDepartment;\n    teacher.fac = data.teacherFaculty;\n    teacher.site = data.teacherWebSite;\n    teacher.teacherEmail = data.email;\n    teacher.thesisAvailability = data.teacherAvailability;\n    teacher.uni = data.teacherUniversity;\n    return teacher;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}\nexport function getStudentById(studentId) {\n  url = baseUrl + \"student/get-by-id/\" + studentId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    var student = new Student();\n    student.studentId = data.studentId;\n    student.firstName = data.firstName;\n    student.subgroup = getSubgroupById(data.subgroupId);\n    student.lastName = data.lastName;\n    student.email = data.email;\n    student.fac = data.faculty;\n    student.major = data.major;\n    student.uni = data.university;\n    return student;\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n}","map":{"version":3,"sources":["C:/Users/Diana/Facultate/Year3/PC/ubb-protool-fe/src/rest/changesRest.js"],"names":["React","MessageStudent","Change","CourseClass","Course","Subgroup","Teacher","Student","MessageTeacher","baseUrlServer","getDayNumber","getTeacherById2","baseUrl","url","getCourseById2","lista","id","i","courseId","co","courseName","courseUniversity","courseFaculty","courseStartDate","courseEndDate","getClassById","teacherL","courseL","sub","classId","console","log","c","classType","classWeek","classDay","classHour","Number","substring","classLocation","teacher","teacherId","subgroup","course","getChangesForStudent","student","urlForChanges","studentId","fetch","method","then","r","json","classes","courses","teachers","changes","result","change","permanentChange","Date","parse","endDate","startDate","courseClass","universityClassId","toTheDate","fromTheDate","messageText","status","changeStatus","changeId","push","getMessagesForTeacher","response","data","messages","messagesTeacher","forEach","myFunction","item","index","messageTeacher","messageId","catch","err","message","getCourseClassById","courseClassId","getCourseById","classDuration","getSubgroupById","subgroupId","getTeacherById","fac","semester","courseSemester","uni","subgroupNumber","groupNumber","firstname","teacherFirstName","lastname","teacherLastName","department","teacherDepartment","teacherFaculty","site","teacherWebSite","teacherEmail","email","thesisAvailability","teacherAvailability","teacherUniversity","getStudentById","firstName","lastName","faculty","major","university"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {MessageStudent} from \"../model/MessageStudent\";\r\nimport Change from \"../model/Change\";\r\nimport CourseClass from \"../model/CourseClass\";\r\nimport Course from \"../model/Course\";\r\nimport {Subgroup} from \"../model/Subgroup\";\r\nimport {Teacher} from \"../model/Teacher\";\r\nimport {Student} from \"../model/Student\";\r\nimport {MessageTeacher} from \"../model/MessageTeacher\";\r\nimport {baseUrlServer} from \"../shared/NetworkSettings\";\r\nimport {getDayNumber, getTeacherById2} from \"./userRest\";\r\n\r\n\r\nconst baseUrl = baseUrlServer;\r\nlet url = \"\";\r\n\r\nfunction getCourseById2(lista,id){\r\n    for (var i in lista){\r\n        if (lista[i].courseId === id){\r\n            var co=new Course(lista[i].courseId,lista[i].courseName,lista[i].courseUniversity,lista[i].courseFaculty,\r\n                lista[i].courseStartDate,lista[i].courseEndDate);\r\n            return co;\r\n        }\r\n    }\r\n}\r\n\r\nfunction getClassById(lista,id,teacherL,courseL,sub){\r\n    for (var i in lista){\r\n        if (lista[i].classId === id ){\r\n            console.log(lista[i])\r\n            var c = new CourseClass();\r\n            c.classId=lista[i].classId\r\n            c.classType=lista[i].classType\r\n            c.classWeek=lista[i].classWeek\r\n            c.classDay = getDayNumber(lista[i].classDay)\r\n            c.classHour = Number(lista[i].classHour.substring(0, 2))\r\n            c.classLocation=lista[i].classLocation\r\n            c.teacher = getTeacherById2(teacherL,lista[i].teacherId)\r\n            c.subgroup = sub\r\n            c.course = getCourseById2(courseL,lista[i].courseId)\r\n            return c;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getChangesForStudent(student) {\r\n    let urlForChanges = baseUrl + \"change/get-changes-by-student-id/\" + student.studentId;\r\n    return fetch(baseUrl + \"class/list\", {\r\n        method: \"GET\"\r\n    }).then((r)=>{return r.json()})\r\n        .then((classes)=>{\r\n            return fetch(baseUrl+\"course/list\",{\r\n                method:'GET'\r\n            }).then((r) => {return r.json()})\r\n                .then((courses)=>{\r\n                    return fetch(baseUrl+\"teacher/list\",{\r\n                        method:'GET'\r\n                    }).then((r)=>{return r.json()})\r\n                        .then((teachers)=>{\r\n                            return fetch(urlForChanges,{\r\n                                method:'GET'\r\n                            }).then((r)=>{return r.json()})\r\n                                .then((changes)=>{\r\n                                    var result=[]\r\n                                    for (var i in changes){\r\n                                        console.log(changes)\r\n                                        console.log(classes)\r\n                                        var change=new Change()\r\n\r\n                                        change.permanentChange = Date.parse(changes[i].endDate) - Date.parse(changes[i].startDate) > 518400000;\r\n                                        var courseClass = getClassById(classes,changes[i].universityClassId,teachers,courses,student.subgroup)\r\n                                        change.courseClass = courseClass\r\n                                        //console.log(courseClass.classDay)\r\n                                        change.toTheDate= \"Day: \"+courseClass.classDay + \" hour: \" + courseClass.classHour;\r\n                                        change.fromTheDate = \"\"; //ramane gol deocamdata, nu stim cum sa luam from date-ul.\r\n                                        change.student = student\r\n                                        change.messageText = \"\";\r\n                                        change.status = changes[i].changeStatus;\r\n                                        change.changeId = changes[i].changeId;\r\n                                        result.push(change)\r\n                                    }\r\n                                    return result;\r\n\r\n\r\n                                })\r\n                        })\r\n                })\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport function getMessagesForTeacher(teacherId) {\r\n    url = baseUrl + \"teacher/get-messages\" + teacherId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            const messages = data;\r\n            let messagesTeacher = [];\r\n\r\n            messages.forEach(myFunction);\r\n\r\n            function myFunction(item, index) {\r\n                let messageTeacher = new MessageTeacher();\r\n\r\n                //messageTeacher.change = getChangeById(item.changeId);\r\n                messageTeacher.messageId = item.messageId;\r\n                messageTeacher.status = messageTeacher.change.status;\r\n                messageTeacher.messageText = item.messageText;\r\n\r\n                messagesTeacher.push(messageTeacher)\r\n            }\r\n\r\n            return messagesTeacher\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\nexport function getCourseClassById(courseClassId) {\r\n    url = baseUrl + \"class/get-by-id/\" + courseClassId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            let courseClass = new CourseClass();\r\n\r\n            courseClass.classHour = data.classHour;\r\n            courseClass.classDay = data.classDay;\r\n            courseClass.course = getCourseById(data.courseId);\r\n            courseClass.classDuration = data.classDuration;\r\n            courseClass.classId = data.classId;\r\n            courseClass.classLocation = data.classLocation;\r\n            courseClass.classType = data.classType;\r\n            courseClass.classWeek = data.classWeek;\r\n            courseClass.subgroup = getSubgroupById(data.subgroupId);\r\n            courseClass.teacher = getTeacherById(data.teacherId);\r\n\r\n            return courseClass;\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\nexport function getCourseById(courseId) {\r\n    url = baseUrl + \"course/get-by-id/\" + courseId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            let course = new Course();\r\n\r\n            course.courseId = data.courseId;\r\n            course.courseName = data.courseName;\r\n            course.endDate = data.courseEndDate;\r\n            course.fac = data.courseFaculty;\r\n            course.semester = data.courseSemester;\r\n            course.startDate = data.courseStartDate;\r\n            course.uni = course.courseUniversity;\r\n\r\n            return course;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\nexport function getSubgroupById(subgroupId) {\r\n    url = baseUrl + \"subgroup/get-by-id/\" + subgroupId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            let subgroup = new Subgroup();\r\n\r\n            subgroup.subgroupId = data.subgroupId;\r\n            subgroup.subgroupNumber = data.subgroupNumber;\r\n            subgroup.groupNumber = data.groupNumber;\r\n\r\n            return subgroup;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\n\r\nexport function getTeacherById(teacherId) {\r\n    url = baseUrl + \"teacher/get-by-id/\" + teacherId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            let teacher = new Teacher();\r\n\r\n            teacher.teacherId = data.teacherId;\r\n            teacher.firstname = data.teacherFirstName;\r\n            teacher.lastname = data.teacherLastName;\r\n            teacher.department = data.teacherDepartment;\r\n            teacher.fac = data.teacherFaculty;\r\n            teacher.site = data.teacherWebSite;\r\n            teacher.teacherEmail = data.email;\r\n            teacher.thesisAvailability = data.teacherAvailability;\r\n            teacher.uni = data.teacherUniversity;\r\n\r\n            return teacher;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\nexport function getStudentById(studentId) {\r\n    url = baseUrl + \"student/get-by-id/\" + studentId;\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    })\r\n        .then((data) => {\r\n            let student = new Student();\r\n\r\n            student.studentId = data.studentId;\r\n            student.firstName = data.firstName;\r\n            student.subgroup = getSubgroupById(data.subgroupId);\r\n            student.lastName = data.lastName;\r\n            student.email = data.email;\r\n            student.fac = data.faculty;\r\n            student.major = data.major;\r\n            student.uni = data.university;\r\n\r\n            return student;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}