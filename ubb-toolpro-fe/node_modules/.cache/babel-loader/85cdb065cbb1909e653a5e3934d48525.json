{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Facultate\\\\Year3\\\\PC\\\\ubb-protool-fe\\\\src\\\\components\\\\register\\\\Register.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport './Register.css';\nimport { isEmail, isEmpty, isContainWhiteSpace } from '../../shared/validator';\nimport { createStudent, createTeacher } from \"../../rest/registerRest\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.setType = function (event) {\n      _this.setState({\n        typeSelected: true\n      });\n\n      _this.handleInputChange(event);\n    };\n\n    _this.validateRegistration = function (e) {\n      var errors = {};\n      var formData = _this.state.formData;\n\n      if (!isEmail(formData.email)) {\n        errors.email = \"Invalid email!\";\n      }\n\n      if (formData.password.length < 6) {\n        errors.password = \"Password must contain at least 6 characters!\";\n      } else if (isContainWhiteSpace(formData.password)) {\n        errors.password = \"Password can't contain white spaces!\";\n      }\n\n      if (!(formData.password === formData.confirmPassword)) {\n        errors.confirmPassword = \"Passwords don't match!\";\n      }\n\n      if (_this.state.typeSelected === false) {\n        errors.type = \"A type of user must be chosen!\";\n      }\n\n      if (formData.type === \"student\") {\n        //isNan(n) returns true if n is not a number\n        if (isNaN(formData.group)) {\n          errors.group = \"Group must be a number!\";\n        }\n\n        if (isNaN(formData.subgroup)) {\n          errors.subgroup = \"Subgroup must be a number!\";\n        }\n      }\n\n      console.log(errors);\n\n      if (isEmpty(errors)) {\n        return true;\n      }\n\n      return errors;\n    };\n\n    _this.addStudent = function () {\n      var formData = _this.state.formData;\n      console.log(formData);\n      var firstName = formData.firstName;\n      var lastName = formData.lastName;\n      var email = formData.email;\n      var password = formData.password;\n      var major = formData.specialization;\n      var university = formData.university;\n      var faculty = formData.faculty;\n      var studentGroup = formData.group;\n      var studentSubGroup = formData.subgroup;\n      createStudent(firstName, lastName, email, password, major, university, faculty, studentGroup, studentSubGroup).then(function (data) {\n        return console.log(data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.addTeacher = function () {\n      var formData = _this.state.formData;\n      var teacherDepartment = formData.department;\n      var teacherAvailability = formData.available === \"yes\";\n      var teacherFirstName = formData.firstName;\n      var teacherLastName = formData.lastName;\n      var email = formData.email;\n      var password = formData.password;\n      var teacherUniversity = formData.university;\n      var teacherFaculty = formData.faculty;\n      var teacherWebSite = formData.website;\n      createTeacher(teacherDepartment, teacherAvailability, teacherFirstName, teacherLastName, email, password, teacherUniversity, teacherFaculty, teacherWebSite).then(function (data) {\n        return console.log(\"data\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.registerMe = function (e) {\n      console.log(_this.state);\n      e.preventDefault();\n\n      var errors = _this.validateRegistration();\n\n      if (errors === true) {\n        if (_this.state.formData['type'] === 'student') {\n          _this.addStudent();\n        } else {\n          _this.addTeacher();\n        }\n\n        _this.props.history.push('/login');\n      } else {\n        _this.setState({\n          localErrors: errors\n        });\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.state = {\n      formData: {},\n      // Contains register form data\n      typeSelected: false,\n      // Indicates if the user chose his type\n      localErrors: {},\n      // Contains login field errors\n      formSubmitted: false,\n      // Indicates submit status of login form\n      loading: false // Indicates in progress state of login form\n\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var studentOrTeacher;\n\n      if (this.state.typeSelected) {\n        if (this.state.formData['type'] === 'student') {\n          studentOrTeacher = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            className: \"GroupTextField\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"\",\n            label: \"Specialization\",\n            autoFocus: true,\n            name: \"specialization\",\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }), React.createElement(TextField, {\n            className: \"GroupTextField\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"group\",\n            label: \"Group\",\n            autoFocus: true,\n            name: \"group\",\n            error: !(this.state.localErrors.group == null),\n            helperText: this.state.localErrors.group,\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }), React.createElement(TextField, {\n            className: \"GroupTextField\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"subgroup\",\n            label: \"Subgroup\",\n            autoFocus: true,\n            name: \"subgroup\",\n            error: !(this.state.localErrors.subgroup == null),\n            helperText: this.state.localErrors.subgroup,\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }));\n        } else {\n          studentOrTeacher = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, React.createElement(TextField, {\n            className: \"GroupTextField\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"department\",\n            label: \"Department\",\n            autoFocus: true,\n            name: \"department\",\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }), React.createElement(TextField, {\n            className: \"GroupTextField\",\n            variant: \"outlined\",\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"website\",\n            label: \"Website\",\n            autoFocus: true,\n            name: \"website\",\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207\n            },\n            __self: this\n          }, \"Are you available for Bachelor's Thesis?\"), React.createElement(RadioGroup, {\n            \"aria-label\": \"available\",\n            defaultValue: \"yes\",\n            name: \"available\",\n            required: true,\n            row: true,\n            onChange: this.handleInputChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208\n            },\n            __self: this\n          }, React.createElement(FormControlLabel, {\n            value: \"yes\",\n            control: React.createElement(Radio, {\n              color: \"primary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }),\n            label: \"Yes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }), React.createElement(FormControlLabel, {\n            value: \"no\",\n            control: React.createElement(Radio, {\n              color: \"primary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 211\n              },\n              __self: this\n            }),\n            label: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          })));\n        }\n      }\n\n      return React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"HeroSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"MainTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"TitleUbbTool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"UBB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"UBB\"), React.createElement(\"span\", {\n        className: \"Tool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Tool\")), React.createElement(\"div\", {\n        className: \"TitlePro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"PRO\")), React.createElement(\"img\", {\n        className: \"HeroImage\",\n        alt: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"MidDivider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"RegisterFormSide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"RegisterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"RegisterForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.registerMe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: \"GroupTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"firstName\",\n        label: \"First Name\",\n        autoFocus: true,\n        name: \"firstName\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"GroupTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"lastName\",\n        label: \"Last Name\",\n        autoFocus: true,\n        name: \"lastName\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"EmailTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        name: \"email\",\n        error: !(this.state.localErrors.email == null),\n        helperText: this.state.localErrors.email,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"PasswordTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        type: \"password\",\n        id: \"password\",\n        label: \"Password\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        name: \"password\",\n        error: !(this.state.localErrors.password == null),\n        helperText: this.state.localErrors.password,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"PasswordTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        type: \"password\",\n        id: \"confirmPassword\",\n        label: \"Confirm Password\",\n        autoFocus: true,\n        name: \"confirmPassword\",\n        error: !(this.state.localErrors.confirmPassword == null),\n        helperText: this.state.localErrors.confirmPassword,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"GroupTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"university\",\n        label: \"University\",\n        autoFocus: true,\n        name: \"university\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"GroupTextField\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"faculty\",\n        label: \"Faculty\",\n        autoFocus: true,\n        name: \"faculty\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(RadioGroup, {\n        className: \"radioGroup\",\n        \"aria-label\": \"type\",\n        name: \"type\",\n        row: true,\n        onChange: this.setType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }),\n        value: \"student\",\n        label: \"Student\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        value: \"teacher\",\n        control: React.createElement(Radio, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }),\n        label: \"Teacher\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      })), studentOrTeacher, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-secondary myButton\",\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"div\", {\n        style: {\n          float: \"left\",\n          marginTop: \"6%\",\n          marginLeft: \"5%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Already have an account? \", React.createElement(\"a\", {\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Login \"))))))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default connect()(Register);","map":{"version":3,"sources":["C:/Users/Diana/Facultate/Year3/PC/ubb-protool-fe/src/components/register/Register.js"],"names":["React","connect","Radio","RadioGroup","FormControlLabel","MuiThemeProvider","TextField","isEmail","isEmpty","isContainWhiteSpace","createStudent","createTeacher","Register","props","setType","event","setState","typeSelected","handleInputChange","validateRegistration","e","errors","formData","state","email","password","length","confirmPassword","type","isNaN","group","subgroup","console","log","addStudent","firstName","lastName","major","specialization","university","faculty","studentGroup","studentSubGroup","then","data","catch","err","addTeacher","teacherDepartment","department","teacherAvailability","available","teacherFirstName","teacherLastName","teacherUniversity","teacherFaculty","teacherWebSite","website","registerMe","preventDefault","history","push","localErrors","target","value","name","formSubmitted","loading","studentOrTeacher","float","marginTop","marginLeft","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './Register.css';\r\nimport {isEmail, isEmpty, isContainWhiteSpace} from '../../shared/validator';\r\nimport {createStudent, createTeacher} from \"../../rest/registerRest\";\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formData: {}, // Contains register form data\r\n            typeSelected: false, // Indicates if the user chose his type\r\n            localErrors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            loading: false // Indicates in progress state of login form\r\n        }\r\n    }\r\n\r\n    setType = (event) => {\r\n        this.setState({typeSelected: true});\r\n        this.handleInputChange(event);\r\n    };\r\n\r\n    validateRegistration = (e) => {\r\n        let errors = {};\r\n        const {formData} = this.state;\r\n\r\n        if (!isEmail(formData.email)) {\r\n            errors.email = \"Invalid email!\";\r\n        }\r\n        if (formData.password.length < 6) {\r\n            errors.password = \"Password must contain at least 6 characters!\";\r\n        } else if (isContainWhiteSpace(formData.password)) {\r\n            errors.password = \"Password can't contain white spaces!\";\r\n        }\r\n        if (!(formData.password === formData.confirmPassword)) {\r\n            errors.confirmPassword = \"Passwords don't match!\";\r\n        }\r\n        if (this.state.typeSelected === false) {\r\n            errors.type = \"A type of user must be chosen!\";\r\n        }\r\n        if (formData.type === \"student\") {\r\n            //isNan(n) returns true if n is not a number\r\n            if (isNaN(formData.group)) {\r\n                errors.group = \"Group must be a number!\";\r\n            }\r\n            if (isNaN(formData.subgroup)) {\r\n                errors.subgroup = \"Subgroup must be a number!\";\r\n            }\r\n        }\r\n        console.log(errors);\r\n        if (isEmpty(errors)) {\r\n            return true;\r\n        }\r\n        return errors;\r\n\r\n    };\r\n\r\n    addStudent = () => {\r\n        const {formData} = this.state;\r\n        console.log(formData);\r\n        let firstName = formData.firstName;\r\n        let lastName = formData.lastName;\r\n        let email = formData.email;\r\n        let password = formData.password;\r\n        let major = formData.specialization;\r\n        let university = formData.university;\r\n        let faculty = formData.faculty;\r\n        let studentGroup = formData.group;\r\n        let studentSubGroup = formData.subgroup;\r\n        createStudent(firstName, lastName, email, password, major, university,\r\n            faculty, studentGroup, studentSubGroup)\r\n            .then((data) => console.log(data))\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    addTeacher = () => {\r\n        const {formData} = this.state;\r\n        let teacherDepartment = formData.department;\r\n        let teacherAvailability = (formData.available === \"yes\")\r\n        let teacherFirstName = formData.firstName;\r\n        let teacherLastName = formData.lastName;\r\n        let email = formData.email;\r\n        let password = formData.password;\r\n        let teacherUniversity = formData.university;\r\n        let teacherFaculty = formData.faculty;\r\n        let teacherWebSite = formData.website;\r\n        createTeacher(teacherDepartment, teacherAvailability, teacherFirstName, teacherLastName,\r\n            email, password, teacherUniversity, teacherFaculty, teacherWebSite)\r\n            .then((data) => console.log(\"data\")).catch((err) => console.log(err));\r\n\r\n\r\n    };\r\n\r\n    registerMe = (e) => {\r\n        console.log(this.state);\r\n        e.preventDefault();\r\n        let errors = this.validateRegistration();\r\n        if (errors === true) {\r\n            if (this.state.formData['type'] === 'student') {\r\n                this.addStudent();\r\n            }\r\n            else {\r\n                this.addTeacher();\r\n            }\r\n            this.props.history.push('/login');\r\n        } else {\r\n            this.setState({\r\n                localErrors: errors\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let {formData} = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    };\r\n\r\n    render() {\r\n        var studentOrTeacher;\r\n        if (this.state.typeSelected) {\r\n            if (this.state.formData['type'] === 'student') {\r\n                studentOrTeacher = <div>\r\n                    <TextField\r\n                        className=\"GroupTextField\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"\"\r\n                        label=\"Specialization\"\r\n                        autoFocus\r\n                        name=\"specialization\"\r\n                        onChange={this.handleInputChange}/>\r\n                    <TextField\r\n                        className=\"GroupTextField\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"group\"\r\n                        label=\"Group\"\r\n                        autoFocus\r\n                        name=\"group\"\r\n                        error={!(this.state.localErrors.group == null)}\r\n                        helperText={this.state.localErrors.group}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        className=\"GroupTextField\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"subgroup\"\r\n                        label=\"Subgroup\"\r\n                        autoFocus\r\n                        name=\"subgroup\"\r\n                        error={!(this.state.localErrors.subgroup == null)}\r\n                        helperText={this.state.localErrors.subgroup}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </div>;\r\n            } else {\r\n                studentOrTeacher = <div>\r\n                    <TextField\r\n                        className=\"GroupTextField\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"department\"\r\n                        label=\"Department\"\r\n                        autoFocus\r\n                        name=\"department\"\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        className=\"GroupTextField\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"website\"\r\n                        label=\"Website\"\r\n                        autoFocus\r\n                        name=\"website\"\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                    <div>Are you available for Bachelor's Thesis?</div>\r\n                    <RadioGroup aria-label=\"available\" defaultValue=\"yes\" name=\"available\" required row\r\n                                onChange={this.handleInputChange}>\r\n                        <FormControlLabel value=\"yes\" control={<Radio color=\"primary\"/>} label=\"Yes\"/>\r\n                        <FormControlLabel value=\"no\" control={<Radio color=\"primary\"/>} label=\"No\"/>\r\n                    </RadioGroup>\r\n                </div>;\r\n            }\r\n\r\n        }\r\n        return <MuiThemeProvider>\r\n            <div className=\"Register\">\r\n\r\n                <div className=\"HeroSide\">\r\n                    <div className=\"MainTitle\">\r\n                        <div className=\"TitleUbbTool\">\r\n                            <span className=\"UBB\">UBB</span>\r\n                            <span className=\"Tool\">Tool</span>\r\n                        </div>\r\n                        <div className=\"TitlePro\">\r\n                            PRO\r\n                        </div>\r\n                    </div>\r\n\r\n                    <img className=\"HeroImage\"\r\n                         alt=\"hero\"/>\r\n                    <div className=\"MidDivider\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"RegisterFormSide\">\r\n                    <div className=\"RegisterTitle\">Register</div>\r\n                    <div className=\"RegisterForm\">\r\n                        <form onSubmit={this.registerMe}>\r\n                            <TextField\r\n                                className=\"GroupTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                name=\"firstName\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"GroupTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                autoFocus\r\n                                name=\"lastName\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"EmailTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                                name=\"email\"\r\n                                error={!(this.state.localErrors.email == null)}\r\n                                helperText={this.state.localErrors.email}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"PasswordTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                autoComplete=\"email\"\r\n                                autoFocus\r\n                                name=\"password\"\r\n                                error={!(this.state.localErrors.password == null)}\r\n                                helperText={this.state.localErrors.password}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"PasswordTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                autoFocus\r\n                                name=\"confirmPassword\"\r\n                                error={!(this.state.localErrors.confirmPassword == null)}\r\n                                helperText={this.state.localErrors.confirmPassword}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"GroupTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"university\"\r\n                                label=\"University\"\r\n                                autoFocus\r\n                                name=\"university\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <TextField\r\n                                className=\"GroupTextField\"\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"faculty\"\r\n                                label=\"Faculty\"\r\n                                autoFocus\r\n                                name=\"faculty\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                            <RadioGroup className=\"radioGroup\" aria-label=\"type\" name=\"type\" row\r\n                                        onChange={this.setType}>\r\n                                <FormControlLabel control={<Radio color=\"primary\"/>}\r\n                                                  value=\"student\"\r\n                                                  label=\"Student\"/>\r\n                                <FormControlLabel value=\"teacher\" control={<Radio color=\"primary\"/>}\r\n                                                  label=\"Teacher\"/>\r\n                            </RadioGroup>\r\n                            {studentOrTeacher}\r\n                            <div>\r\n                                <button type=\"submit\" className=\"btn btn-secondary myButton\"\r\n                                        style={{float: \"left\"}}>Submit\r\n                                </button>\r\n                                <div style={{float: \"left\", marginTop: \"6%\", marginLeft: \"5%\"}}>Already have an\r\n                                    account? <a href=\"/login\">Login </a></div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default connect()(Register);\r\n"]},"metadata":{},"sourceType":"module"}