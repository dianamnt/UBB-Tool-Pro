{"ast":null,"code":"import { Student } from \"../model/Student\";\nimport { Subgroup } from \"../model/Subgroup\";\nimport { baseUrlServer } from \"../shared/NetworkSettings\";\nvar baseUrl = baseUrlServer;\nexport function getStudentsListForClass(classId) {\n  var url = baseUrl + \"class/get-all-students-by-class-id/\" + classId;\n  var url2 = baseUrl + \"subgroup/list\";\n  return fetch(url2, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (r) {\n    return r.json();\n  }).then(function (subgroups) {\n    console.log(subgroups);\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(\"response \" + JSON.stringify(response));\n      return response.json();\n    }).then(function (data) {\n      var studentsList = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        console.log(\"obj\" + item);\n        var student = new Student(item.studentId, getSubgroupById(subgroups, item.subgroupId), data[i].firstName, item.lastName, item.email, item.faculty, item.major, item.university); // student.studentId = item.studentId;\n        // student.firstName = item.firstName;\n        // student.subgroup = getSubgroupById(subgroups, data.subgroupId);\n        // student.lastName = item.lastName;\n        // student.email = item.email;\n        // student.fac = item.faculty;\n        // student.major = item.major;\n        // student.uni = item.university;\n\n        console.log(\"student \" + student.firstName);\n        studentsList.push(student);\n      }\n\n      console.log(\"student list\" + studentsList);\n      return studentsList;\n    }).catch(function (err) {\n      console.log(err.message);\n    });\n  });\n}\n\nfunction getSubgroupById(list, id) {\n  for (var i in list) {\n    if (list[i].subgroupId === id) {\n      return new Subgroup(list[i].subgroupId, list[i].groupNumber, list[i].groupNumber);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Diana/Facultate/Year3/PC/ubb-protool-fe/src/rest/studentsListRest.js"],"names":["Student","Subgroup","baseUrlServer","baseUrl","getStudentsListForClass","classId","url","url2","fetch","method","headers","then","r","json","subgroups","console","log","response","JSON","stringify","data","studentsList","i","length","item","student","studentId","getSubgroupById","subgroupId","firstName","lastName","email","faculty","major","university","push","catch","err","message","list","id","groupNumber"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,kBAAtB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,IAAMC,OAAO,GAAGD,aAAhB;AAEA,OAAO,SAASE,uBAAT,CAAiCC,OAAjC,EAA0C;AAC7C,MAAIC,GAAG,GAAGH,OAAO,GAAG,qCAAV,GAAkDE,OAA5D;AACA,MAAIE,IAAI,GAAGJ,OAAO,GAAG,eAArB;AACA,SAAOK,KAAK,CAACD,IAAD,EAAO;AACfE,IAAAA,MAAM,EAAE,KADO;AAEfC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX;AAFM,GAAP,CAAL,CAMJC,IANI,CAMC,UAACC,CAAD,EAAO;AACX,WAAOA,CAAC,CAACC,IAAF,EAAP;AACH,GARM,EAQJF,IARI,CAQC,UAACG,SAAD,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,WAAON,KAAK,CAACF,GAAD,EAAM;AACdG,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFK,KAAN,CAAL,CAMJC,IANI,CAMC,UAACM,QAAD,EAAc;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcE,IAAI,CAACC,SAAL,CAAeF,QAAf,CAA1B;AACA,aAAOA,QAAQ,CAACJ,IAAT,EAAP;AACH,KATM,EAUFF,IAVE,CAUG,UAACS,IAAD,EAAU;AAEZ,UAAIC,YAAY,GAAG,EAAnB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAIE,IAAI,GAAGJ,IAAI,CAACE,CAAD,CAAf;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQQ,IAApB;AACA,YAAIC,OAAO,GAAG,IAAIzB,OAAJ,CAAYwB,IAAI,CAACE,SAAjB,EAA4BC,eAAe,CAACb,SAAD,EAAYU,IAAI,CAACI,UAAjB,CAA3C,EAAyER,IAAI,CAACE,CAAD,CAAJ,CAAQO,SAAjF,EAA4FL,IAAI,CAACM,QAAjG,EACVN,IAAI,CAACO,KADK,EACEP,IAAI,CAACQ,OADP,EACgBR,IAAI,CAACS,KADrB,EAC4BT,IAAI,CAACU,UADjC,CAAd,CAHkC,CAMlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaS,OAAO,CAACI,SAAjC;AACAR,QAAAA,YAAY,CAACc,IAAb,CAAkBV,OAAlB;AACH;;AACDV,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBK,YAA7B;AACA,aAAOA,YAAP;AACH,KAjCE,EAkCFe,KAlCE,CAkCI,UAACC,GAAD,EAAS;AACZtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAG,CAACC,OAAhB;AACH,KApCE,CAAP;AAqCH,GA/CM,CAAP;AAgDH;;AAED,SAASX,eAAT,CAAyBY,IAAzB,EAA+BC,EAA/B,EAAmC;AAC/B,OAAK,IAAIlB,CAAT,IAAciB,IAAd,EAAoB;AAChB,QAAIA,IAAI,CAACjB,CAAD,CAAJ,CAAQM,UAAR,KAAuBY,EAA3B,EAA+B;AAC3B,aAAO,IAAIvC,QAAJ,CAAasC,IAAI,CAACjB,CAAD,CAAJ,CAAQM,UAArB,EAAiCW,IAAI,CAACjB,CAAD,CAAJ,CAAQmB,WAAzC,EAAsDF,IAAI,CAACjB,CAAD,CAAJ,CAAQmB,WAA9D,CAAP;AACH;AACJ;AACJ","sourcesContent":["import {Student} from \"../model/Student\";\r\nimport {Subgroup} from \"../model/Subgroup\";\r\nimport {baseUrlServer} from \"../shared/NetworkSettings\";\r\n\r\nconst baseUrl = baseUrlServer;\r\n\r\nexport function getStudentsListForClass(classId) {\r\n    let url = baseUrl + \"class/get-all-students-by-class-id/\" + classId;\r\n    let url2 = baseUrl + \"subgroup/list\";\r\n    return fetch(url2, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }).then((r) => {\r\n        return r.json();\r\n    }).then((subgroups) => {\r\n        console.log(subgroups);\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((response) => {\r\n            console.log(\"response \" + JSON.stringify(response));\r\n            return response.json();\r\n        })\r\n            .then((data) => {\r\n\r\n                let studentsList = [];\r\n\r\n                for (let i = 0; i < data.length; i++) {\r\n                    var item = data[i];\r\n                    console.log(\"obj\" + item);\r\n                    var student = new Student(item.studentId, getSubgroupById(subgroups, item.subgroupId), data[i].firstName, item.lastName,\r\n                        item.email, item.faculty, item.major, item.university);\r\n\r\n                    // student.studentId = item.studentId;\r\n                    // student.firstName = item.firstName;\r\n                    // student.subgroup = getSubgroupById(subgroups, data.subgroupId);\r\n                    // student.lastName = item.lastName;\r\n                    // student.email = item.email;\r\n                    // student.fac = item.faculty;\r\n                    // student.major = item.major;\r\n                    // student.uni = item.university;\r\n                    console.log(\"student \" + student.firstName)\r\n                    studentsList.push(student)\r\n                }\r\n                console.log(\"student list\" + studentsList);\r\n                return studentsList;\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    });\r\n}\r\n\r\nfunction getSubgroupById(list, id) {\r\n    for (var i in list) {\r\n        if (list[i].subgroupId === id) {\r\n            return new Subgroup(list[i].subgroupId, list[i].groupNumber, list[i].groupNumber)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}