{"ast":null,"code":"import { classess } from \"../mockings/ClassMock\";\nimport { Teacher } from \"../model/Teacher\";\nimport { Class } from \"@material-ui/icons\";\nimport CourseClass from \"../model/CourseClass\";\nimport Course from \"../model/Course\";\nimport { Subgroup } from \"../model/Subgroup\";\nimport { baseHeader, baseUrlServer } from \"../shared/NetworkSettings\";\nvar baseUrl = baseUrlServer;\nvar url;\nexport function getTeacherById2(tList, tId) {\n  for (var i in tList) {\n    if (tList[i].teacherId === tId) {\n      return new Teacher(tList[i].teacherId, tList[i].teacherDepartment, tList[i].teacherAvailability, tList[i].teacherFirstName, tList[i].teacherLastName, tList[i].email, tList[i].teacherUniversity, tList[i].teacherFaculty, tList[i].teacherWebSite);\n    }\n  }\n}\n\nfunction getSubgroupById(lista, id) {\n  for (var i in lista) {\n    if (lista[i].subgroupId === id) {\n      return new Subgroup(lista[i].subgroupId, lista[i].groupNumber, lista[i].groupNumber);\n    }\n  }\n}\n\nexport function getDayNumber(dayString) {\n  var days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"];\n\n  for (var i = 1; i < 6; i++) {\n    if (days[i - 1] === dayString) {\n      return i;\n    }\n  }\n}\nexport function getClassesForStudent(userId, today) {\n  var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n  var yyyy = today.getFullYear();\n  var weekDate = yyyy + '-' + mm + '-' + dd;\n  console.log(weekDate);\n  url = baseUrl + \"class/getScheduleStudent/\" + userId + \"/\" + weekDate;\n  return fetch(baseUrl + \"course/list\", {\n    method: 'GET'\n  }).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    var courses = [];\n\n    for (var c in data) {\n      var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"]);\n      courses.push(co);\n    }\n\n    return fetch(baseUrl + \"teacher/list\", {\n      method: 'GET'\n    }).then(function (r) {\n      return r.json();\n    }).then(function (teachers) {\n      return fetch(baseUrl + \"subgroup/list\", {\n        method: 'GET'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (subgroups) {\n        return fetch(url, {\n          method: 'GET'\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          console.log(data);\n          var cls = [];\n\n          for (var i in data) {\n            for (var j in courses) {\n              if (courses[j].courseId === data[i].courseId) {\n                console.log(\"add\");\n                var dayNr = getDayNumber(data[i].classDay);\n                var teacher = getTeacherById2(teachers, data[i].teacherId);\n                var subgroup = getSubgroupById(subgroups, data[i].subgroupId);\n                var hourr = Number(data[i].classHour.substring(0, 2));\n                var c = new CourseClass(data[i].classId, teacher, courses[j], subgroup, data[i].classType, dayNr, data[i].classWeek, hourr, data[i].classLocation, data[i].classDuration);\n                cls.push(c);\n              }\n            }\n          }\n\n          console.log(cls);\n          return cls;\n        }).catch(function (err) {\n          console.log(err.message);\n        });\n      });\n    });\n  });\n}\nexport function getClassesForTeacher(teacher) {\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n  var yyyy = today.getFullYear(); //const weekDate = yyyy + '-' + mm + '-' + dd;\n\n  var weekDate = \"2019-10-02\";\n  url = baseUrl + \"class/getScheduleTeacher/\" + teacher.teacherId + \"/\" + weekDate;\n  return fetch(baseUrl + \"course/list\", {\n    method: 'GET'\n  }).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    var courses = [];\n\n    for (var c in data) {\n      var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"]);\n      courses.push(co);\n    }\n\n    return fetch(baseUrl + \"teacher/list\", {\n      method: 'GET'\n    }).then(function (r) {\n      return r.json();\n    }).then(function (teachers) {\n      return fetch(baseUrl + \"subgroup/list\", {\n        method: 'GET'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (subgroups) {\n        return fetch(url, {\n          method: 'POST'\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          console.log(data);\n          var cls = [];\n\n          for (var i in data) {\n            for (var j in courses) {\n              if (courses[j].courseId === data[i].courseId) {\n                console.log(\"add\");\n                var dayNr = getDayNumber(data[i].classDay);\n                var subgroup = getSubgroupById(subgroups, data[i].subgroupId);\n                var hourr = Number(data[i].classHour.substring(0, 2));\n                var c = new CourseClass(data[i].classId, teacher, courses[j], subgroup, data[i].classType, dayNr, data[i].classWeek, hourr, data[i].classLocation, data[i].classDuration);\n                cls.push(c);\n              }\n            }\n          }\n\n          console.log(cls);\n          return cls;\n        }).catch(function (err) {\n          console.log(err.message);\n        });\n      });\n    });\n  });\n}\n\nfunction getAllCourses() {\n  url = baseUrl + \"course/list\";\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    console.log(data[0][\"courseId\"]);\n    var courses = [];\n\n    for (var c in data) {\n      var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"]);\n      courses.push(co);\n    }\n\n    return courses;\n  });\n}\n\nexport function getAllTeachers() {\n  url = baseUrl + \"teacher/list\";\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data; //list of teachers\n  }).catch(function (err) {\n    console.log(err.message);\n  });\n} // export function getClassesForWeek2(courseId, classType, weekDate){\n//     url=baseUrl+courseId+\"/\"+classType+\"/\"+weekDate\n//     return fetch(url,{\n//         method:'GET'\n//     }).then((response)=>{\n//         return response.json()\n//     }).then((data)=>{\n//         return data; //lista de clase de acel tip, de la acel curs, in acea saptamana\n//     })\n// }\n\nexport function getChangesOfCourse(courseId) {\n  url = baseUrl + courseId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data; //lista de change-uri\n  });\n}\nexport function getClassesWithChanges(userId, subgroupId, weekDate) {\n  url = baseUrl + userId + \"/\" + subgroupId + \"/\" + weekDate;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data; //lista de classes\n  });\n}\nexport function getStudentsForClass(classId) {\n  url = baseUrl + classId;\n  return fetch(url, {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return data; //list of students\n  });\n}\nexport function updateStudent(body) {\n  url = baseUrl + \"student/updateStudent\";\n  return fetch(url, {\n    method: 'POST',\n    headers: baseHeader,\n    body: body\n  }).then(function (response) {\n    console.log(response.status);\n\n    if (response.status === 200 || response.status === 302) {\n      return 1;\n    } else return 0;\n  }).then(function (data) {\n    return data;\n  });\n}\nexport function updateTeacher(body) {\n  url = baseUrl + \"/teacher/updateTeacher\";\n  return fetch(url, {\n    method: 'POST',\n    headers: baseHeader,\n    body: body\n  }).then(function (response) {\n    if (response.status === 200 || response.status === 302) {\n      return 1;\n    } else return 0;\n  }).then(function (data) {\n    return data;\n  });\n}\nexport function addChange(studentId, firstName, lastName, groupId, subgroupId) {//post\n}\nexport function registerStudent(firstName, lastName, email, password, uni, fac, spec, group, subgroup) {//post\n}","map":{"version":3,"sources":["C:/Users/Diana/Facultate/Year3/PC/ubb-protool-fe/src/rest/userRest.js"],"names":["classess","Teacher","Class","CourseClass","Course","Subgroup","baseHeader","baseUrlServer","baseUrl","url","getTeacherById2","tList","tId","i","teacherId","teacherDepartment","teacherAvailability","teacherFirstName","teacherLastName","email","teacherUniversity","teacherFaculty","teacherWebSite","getSubgroupById","lista","id","subgroupId","groupNumber","getDayNumber","dayString","days","getClassesForStudent","userId","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","weekDate","console","log","fetch","method","then","r","json","data","courses","c","co","push","teachers","subgroups","response","cls","j","courseId","dayNr","classDay","teacher","subgroup","hourr","Number","classHour","substring","classId","classType","classWeek","classLocation","classDuration","catch","err","message","getClassesForTeacher","Date","getAllCourses","getAllTeachers","getChangesOfCourse","getClassesWithChanges","getStudentsForClass","updateStudent","body","headers","status","updateTeacher","addChange","studentId","firstName","lastName","groupId","registerStudent","password","uni","fac","spec","group"],"mappings":"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","sourcesContent":["import {classess} from \"../mockings/ClassMock\"\r\nimport {Teacher} from \"../model/Teacher\";\r\nimport {Class} from \"@material-ui/icons\";\r\nimport CourseClass from \"../model/CourseClass\";\r\nimport Course from \"../model/Course\";\r\nimport {Subgroup} from \"../model/Subgroup\";\r\nimport {baseHeader, baseUrlServer} from \"../shared/NetworkSettings\";\r\n\r\nconst baseUrl = baseUrlServer;\r\nvar url;\r\n\r\nexport function getTeacherById2(tList, tId) {\r\n    for (var i in tList) {\r\n        if (tList[i].teacherId === tId) {\r\n            return new Teacher(tList[i].teacherId, tList[i].teacherDepartment, tList[i].teacherAvailability, tList[i].teacherFirstName, tList[i].teacherLastName,\r\n                tList[i].email, tList[i].teacherUniversity, tList[i].teacherFaculty, tList[i].teacherWebSite)\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSubgroupById(lista, id) {\r\n    for (var i in lista) {\r\n        if (lista[i].subgroupId === id) {\r\n            return new Subgroup(lista[i].subgroupId, lista[i].groupNumber, lista[i].groupNumber)\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDayNumber(dayString) {\r\n    const days = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"]\r\n    for (var i = 1; i < 6; i++) {\r\n        if (days[i - 1] === dayString) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n\r\nexport function getClassesForStudent(userId,today) {\r\n\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    const weekDate = yyyy + '-' + mm + '-' + dd;\r\n    console.log(weekDate)\r\n    url = baseUrl + \"class/getScheduleStudent/\" + userId + \"/\" + weekDate;\r\n\r\n    return fetch(baseUrl + \"course/list\", {\r\n        method: 'GET'\r\n    }).then((r) => {\r\n        return r.json()\r\n    })\r\n        .then((data) => {\r\n            var courses = []\r\n            for (var c in data) {\r\n\r\n                var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"])\r\n\r\n                courses.push(co)\r\n            }\r\n            return fetch(baseUrl + \"teacher/list\", {\r\n                method: 'GET'\r\n\r\n            }).then((r) => {\r\n                return r.json()\r\n            })\r\n                .then((teachers) => {\r\n                    return fetch(baseUrl + \"subgroup/list\", {\r\n                        method: 'GET'\r\n                    }).then((r) => {\r\n                        return r.json()\r\n                    })\r\n                        .then((subgroups) => {\r\n                            return fetch(url, {\r\n                                method: 'GET',\r\n                            }).then((response) => {\r\n                                return response.json();\r\n                            })\r\n                                .then((data) => {\r\n                                    console.log(data)\r\n                                    var cls = []\r\n                                    for (var i in data) {\r\n\r\n                                        for (var j in courses) {\r\n                                            if (courses[j].courseId === data[i].courseId) {\r\n                                                console.log(\"add\")\r\n                                                const dayNr = getDayNumber(data[i].classDay)\r\n                                                const teacher = getTeacherById2(teachers, data[i].teacherId)\r\n                                                const subgroup = getSubgroupById(subgroups, data[i].subgroupId)\r\n\r\n                                                const hourr = Number(data[i].classHour.substring(0, 2))\r\n                                                var c = new CourseClass(data[i].classId, teacher, courses[j], subgroup, data[i].classType, dayNr, data[i].classWeek, hourr, data[i].classLocation, data[i].classDuration)\r\n\r\n                                                cls.push(c)\r\n                                            }\r\n                                        }\r\n\r\n\r\n                                    }\r\n                                    console.log(cls)\r\n                                    return cls\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err.message)\r\n                                })\r\n                        })\r\n\r\n\r\n                })\r\n\r\n\r\n        })\r\n\r\n}\r\n\r\nexport function getClassesForTeacher(teacher) {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    //const weekDate = yyyy + '-' + mm + '-' + dd;\r\n    const weekDate = \"2019-10-02\"\r\n    url = baseUrl + \"class/getScheduleTeacher/\" + teacher.teacherId + \"/\" + weekDate;\r\n\r\n    return fetch(baseUrl + \"course/list\", {\r\n        method: 'GET'\r\n    }).then((r) => {\r\n        return r.json()\r\n    })\r\n        .then((data) => {\r\n            var courses = []\r\n            for (var c in data) {\r\n\r\n                var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"])\r\n\r\n                courses.push(co)\r\n            }\r\n            return fetch(baseUrl + \"teacher/list\", {\r\n                method: 'GET'\r\n\r\n            }).then((r) => {\r\n                return r.json()\r\n            })\r\n                .then((teachers) => {\r\n                    return fetch(baseUrl + \"subgroup/list\", {\r\n                        method: 'GET'\r\n                    }).then((r) => {\r\n                        return r.json()\r\n                    })\r\n                        .then((subgroups) => {\r\n                            return fetch(url, {\r\n                                method: 'POST',\r\n                            }).then((response) => {\r\n                                return response.json();\r\n                            })\r\n                                .then((data) => {\r\n                                    console.log(data)\r\n                                    var cls = []\r\n                                    for (var i in data) {\r\n\r\n                                        for (var j in courses) {\r\n                                            if (courses[j].courseId === data[i].courseId) {\r\n                                                console.log(\"add\")\r\n                                                const dayNr = getDayNumber(data[i].classDay)\r\n                                                const subgroup = getSubgroupById(subgroups, data[i].subgroupId)\r\n\r\n                                                const hourr = Number(data[i].classHour.substring(0, 2))\r\n                                                var c = new CourseClass(data[i].classId, teacher, courses[j], subgroup, data[i].classType, dayNr, data[i].classWeek, hourr, data[i].classLocation, data[i].classDuration)\r\n\r\n                                                cls.push(c)\r\n                                            }\r\n                                        }\r\n\r\n\r\n                                    }\r\n                                    console.log(cls)\r\n                                    return cls\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(err.message)\r\n                                })\r\n                        })\r\n\r\n\r\n                })\r\n\r\n\r\n        })\r\n\r\n}\r\n\r\n\r\nfunction getAllCourses() {\r\n    url = baseUrl + \"course/list\"\r\n    return fetch(url, {\r\n        method: 'GET'\r\n    }).then((r) => {\r\n        return r.json()\r\n    })\r\n        .then((data) => {\r\n            console.log(data[0][\"courseId\"])\r\n            var courses = [];\r\n            for (var c in data) {\r\n\r\n                var co = new Course(data[c][\"courseId\"], data[c][\"courseName\"], data[c][\"courseSemester\"], data[c][\"courseUniversity\"], data[c][\"courseFaculty\"], data[c][\"courseStartDate\"], data[c][\"courseEndDate\"])\r\n\r\n                courses.push(co)\r\n            }\r\n            return courses;\r\n        })\r\n}\r\n\r\nexport function getAllTeachers() {\r\n    url = baseUrl + \"teacher/list\";\r\n    return fetch(url, {\r\n        method: 'GET',\r\n    }).then((response) => {\r\n        return response.json();\r\n    }).then((data) => {\r\n            return data; //list of teachers\r\n        }).catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n\r\n}\r\n\r\n// export function getClassesForWeek2(courseId, classType, weekDate){\r\n//     url=baseUrl+courseId+\"/\"+classType+\"/\"+weekDate\r\n//     return fetch(url,{\r\n//         method:'GET'\r\n//     }).then((response)=>{\r\n//         return response.json()\r\n//     }).then((data)=>{\r\n//         return data; //lista de clase de acel tip, de la acel curs, in acea saptamana\r\n//     })\r\n// }\r\n\r\n\r\nexport function getChangesOfCourse(courseId) {\r\n    url = baseUrl + courseId\r\n    return fetch(url, {\r\n        method: 'GET'\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        return data; //lista de change-uri\r\n    })\r\n}\r\n\r\n\r\nexport function getClassesWithChanges(userId, subgroupId, weekDate) {\r\n    url = baseUrl + userId + \"/\" + subgroupId + \"/\" + weekDate\r\n    return fetch(url, {\r\n        method: 'GET'\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        return data; //lista de classes\r\n    })\r\n}\r\n\r\nexport function getStudentsForClass(classId) {\r\n    url = baseUrl + classId;\r\n    return fetch(url, {\r\n        method: 'GET'\r\n    }).then((response) => {\r\n        return response.json()\r\n    }).then((data) => {\r\n        return data; //list of students\r\n    })\r\n}\r\n\r\nexport function updateStudent(body) {\r\n    url = baseUrl + \"student/updateStudent\";\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: baseHeader,\r\n        body: body\r\n    }).then((response) => {\r\n        console.log(response.status);\r\n        if (response.status === 200 || response.status === 302) {\r\n            return 1\r\n        } else\r\n            return 0\r\n    }).then((data) => {\r\n        return data\r\n    })\r\n}\r\n\r\nexport function updateTeacher(body) {\r\n    url = baseUrl + \"/teacher/updateTeacher\";\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: baseHeader,\r\n        body: body\r\n    }).then((response) => {\r\n        if (response.status === 200 || response.status === 302) {\r\n            return 1\r\n        } else return 0\r\n    }).then((data) => {\r\n        return data\r\n    })\r\n}\r\n\r\n\r\nexport function addChange(studentId, firstName, lastName, groupId, subgroupId) {\r\n    //post\r\n}\r\n\r\nexport function registerStudent(firstName, lastName, email, password, uni, fac, spec, group, subgroup) {\r\n    //post\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}